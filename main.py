import streamlit as st
import pandas as pd
from data_processor import process_text_file
from storage import Storage
import io

# Set page configuration
st.set_page_config(
    page_title="ржмрж╛ржВрж▓рж╛ ржЯрзЗржХрзНрж╕ржЯ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ",
    page_icon="ЁЯУЭ",
    layout="wide"
)

# Custom CSS
st.markdown("""
<style>
    .main {
        padding: 2rem;
    }
    .stButton>button {
        width: 100%;
        border-radius: 5px;
        height: 3em;
        background-color: #f63366;
        color: white;
    }
    .stTextInput>div>div>input {
        border-radius: 5px;
    }
    h1 {
        color: #1E1E1E;
        padding-bottom: 2rem;
    }
    h2 {
        color: #2E2E2E;
        padding-bottom: 1rem;
    }
</style>
""", unsafe_allow_html=True)

# Initialize session state
if 'storage' not in st.session_state:
    st.session_state.storage = Storage()

def main():
    st.title("ЁЯУЪ ржмрж╛ржВрж▓рж╛ ржЯрзЗржХрзНрж╕ржЯ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ ржЕрзНржпрж╛ржкрзНрж▓рж┐ржХрзЗрж╢ржи")

    # Sidebar navigation with icons
    page = st.sidebar.radio(
        "ЁЯУС ржкрзГрж╖рзНржарж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
        ["ЁЯУд ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб", "ЁЯФН ржЕржирзБрж╕ржирзНржзрж╛ржи", "ЁЯУЛ рж╕ржХрж▓ рждржерзНржп"]
    )

    if "ЁЯУд ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб" in page:
        show_upload_page()
    elif "ЁЯФН ржЕржирзБрж╕ржирзНржзрж╛ржи" in page:
        show_search_page()
    else:
        show_all_data_page()

def show_upload_page():
    st.header("ЁЯУд ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб")

    # Add description
    st.markdown("""
    #### ржмрзНржпржмрж╣рж╛рж░ ржирж┐рж░рзНржжрзЗрж╢рж┐ржХрж╛:
    1. ржПржХрж╛ржзрж┐ржХ ржЯрзЗржХрзНрж╕ржЯ ржлрж╛ржЗрж▓ ржПржХрж╕рж╛ржерзЗ ржЖржкрж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи
    2. ржкрзНрж░рждрж┐ржЯрж┐ ржлрж╛ржЗрж▓ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржХрж░ржг ржХрж░рж╛ рж╣ржмрзЗ
    3. ржбрзЗржЯрж╛ рж╕рзБрж░ржХрзНрж╖рж┐рждржнрж╛ржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣ржмрзЗ
    """)

    uploaded_files = st.file_uploader(
        "ржЯрзЗржХрзНрж╕ржЯ ржлрж╛ржЗрж▓ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
        type=['txt'],
        accept_multiple_files=True
    )

    if uploaded_files:
        with st.spinner('ржлрж╛ржЗрж▓ ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржХрж░ржг ржЪрж▓ржЫрзЗ...'):
            for uploaded_file in uploaded_files:
                content = uploaded_file.read().decode('utf-8')
                records = process_text_file(content)
                st.session_state.storage.add_file_data(uploaded_file.name, records)
                st.success(f"тЬЕ '{uploaded_file.name}' рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржкрж▓рзЛржб рж╣ржпрж╝рзЗржЫрзЗ ({len(records)}ржЯрж┐ рж░рзЗржХрж░рзНржб)")

def show_search_page():
    st.header("ЁЯФН ржЙржирзНржиржд ржЕржирзБрж╕ржирзНржзрж╛ржи")

    # Create two columns for search fields
    col1, col2 = st.columns(2)

    with col1:
        si_number = st.text_input("ЁЯФв ржХрзНрж░ржорж┐ржХ ржиржВ")
        name = st.text_input("ЁЯСд ржирж╛ржо")
        father_name = st.text_input("ЁЯСи ржкрж┐рждрж╛рж░ ржирж╛ржо")
        mother_name = st.text_input("ЁЯСй ржорж╛рждрж╛рж░ ржирж╛ржо")

    with col2:
        occupation = st.text_input("ЁЯТ╝ ржкрзЗрж╢рж╛")
        address = st.text_input("ЁЯПа ржарж┐ржХрж╛ржирж╛")
        dob = st.text_input("ЁЯУЕ ржЬржирзНржо рждрж╛рж░рж┐ржЦ")

    col1, col2 = st.columns(2)

    with col1:
        if st.button("ЁЯФН ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи", key="search"):
            with st.spinner('ржЕржирзБрж╕ржирзНржзрж╛ржи ржЪрж▓ржЫрзЗ...'):
                results = st.session_state.storage.search_records(
                    ржХрзНрж░ржорж┐ржХ_ржиржВ=si_number,
                    ржирж╛ржо=name,
                    ржкрж┐рждрж╛рж░_ржирж╛ржо=father_name,
                    ржорж╛рждрж╛рж░_ржирж╛ржо=mother_name,
                    ржкрзЗрж╢рж╛=occupation,
                    ржарж┐ржХрж╛ржирж╛=address,
                    ржЬржирзНржо_рждрж╛рж░рж┐ржЦ=dob
                )

                if results:
                    st.write(f"ЁЯУК ржорзЛржЯ {len(results)} ржЯрж┐ ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ:")
                    df = pd.DataFrame(results)
                    st.dataframe(df, use_container_width=True)
                else:
                    st.info("тЭМ ржХрзЛржи ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐")

    with col2:
        if st.button("ЁЯУЛ рж╕ржХрж▓ рждржерзНржп ржжрзЗржЦрзБржи", key="show_all"):
            with st.spinner('рждржерзНржп рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...'):
                all_records = st.session_state.storage.get_all_records()
                if all_records:
                    df = pd.DataFrame(all_records)
                    st.dataframe(df, use_container_width=True)
                else:
                    st.info("тЭМ ржХрзЛржи рждржерзНржп рж╕ржВрж░ржХрзНрж╖рж┐ржд ржирзЗржЗ")

def show_all_data_page():
    st.header("ЁЯУЛ рж╕ржВрж░ржХрзНрж╖рж┐ржд рж╕ржХрж▓ рждржерзНржп")

    files = st.session_state.storage.get_file_names()

    if not files:
        st.info("тЭМ ржХрзЛржи ржлрж╛ржЗрж▓ ржЖржкрж▓рзЛржб ржХрж░рж╛ рж╣ржпрж╝ржирж┐")
        return

    selected_file = st.selectbox("ЁЯУБ ржлрж╛ржЗрж▓ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи", files)

    if selected_file:
        with st.spinner('рждржерзНржп рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...'):
            records = st.session_state.storage.get_file_data(selected_file)
            if records:
                df = pd.DataFrame(records)
                st.dataframe(df, use_container_width=True)
            else:
                st.info("тЭМ ржирж┐рж░рзНржмрж╛ржЪрж┐ржд ржлрж╛ржЗрж▓рзЗ ржХрзЛржи рждржерзНржп ржирзЗржЗ")

if __name__ == "__main__":
    main()